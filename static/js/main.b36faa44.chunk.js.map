{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","event","showDetails","handleClick","setState","previousState","this","props","className","summary","location","start","dateTime","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","display","NumberOfEvents","numberOfEvents","handleInputChange","placeholder","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","selectedLocation","eventCount","filteredEvents","slice","mounted","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.b36faa44.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    event: {},\n    showDetails: false\n  }\n\n  handleClick = () => {\n    this.setState(previousState => ({\n      showDetails: !previousState.showDetails\n    }));\n  }\n\n  render() {\n    const { event } =this.props;\n    const { showDetails } = this.state;\n\n    return (\n      <div className=\"event\">\n        <div className=\"eventName\">\n          <h1>{event.summary}</h1>\n          <p className=\"eventLocation\">{event.location}</p>\n          <div className=\"eventTimeStart\">{event.start.dateTime}</div>\n        </div>\n        {!showDetails\n          ? <button\n              className=\"details-btn\"\n              onClick={() => this.handleClick()}\n              >Show details\n            </button>\n          : <div>\n              <div className=\"eventDetails\">\n                <p className=\"eventDescription\">{event.description}</p>\n              </div>\n              <button\n                className=\"details-btn\"\n                onClick={() => this.handleClick()}\n                >Hide details\n              </button>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color\n    };\n  }\n\n  render() {\n    return (\n      <div className='Alert'>\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    )\n  }\n}\n\nexport class InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue'\n  }\n}\n\nexport class ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color= 'red';\n  }\n}","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  // Alternative way of setting initial state, can also be done within constructor { super(); this.state =...}\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({showSuggestions:true});\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: 'We cannot find the city you are looking for. Please try another city.'\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText:''\n      });\n    }\n  }\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n      infoText: ''\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li \n              className=\"city-suggestion\"\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\n          ))}\n          <li key='all' onClick={() => this.handleItemClicked('all')}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32\n  }\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n    this.setState({ numberOfEvents: value });\n    if (value > 32 || value < 1) {\n      return this.setState({\n        infoText: '(Select number from 1 to 32)'\n      })\n    } else {\n      return this.setState({\n        infoText: ''\n      });\n    }\n  }\n\n  render() {\n    const { numberOfEvents } = this.state;\n    return (\n      <div className=\"numberOfEvents\">\n        <label>Number of Events: </label>\n        <ErrorAlert className=\"error-alert\" text={this.state.infoText}/>\n        <input\n          className=\"eventNumberInput\"\n          type=\"number\"\n          placeholder=\"32\"\n          value={numberOfEvents}\n          onChange={this.handleInputChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    kind: 'calendar#event',\n    etag: '\"3181161784712000\"',\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n    status: 'confirmed',\n    htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:17:46.000Z',\n    updated: '2020-05-27T12:01:32.356Z',\n    summary: 'Learn JavaScript',\n    description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n    location: 'London, UK',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-19T17:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n    originalStartTime: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: 'default',\n  },\n  {\n    kind: 'calendar#event',\n    etag: '\"3181159875584000\"',\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n    status: 'confirmed',\n    htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:14:30.000Z',\n    updated: '2020-05-27T11:45:37.792Z',\n    summary: 'React is Fun',\n    description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n    location: 'Berlin, Germany',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-20T15:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n    originalStartTime: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: 'default',\n  },\n];\n\nexport { mockData }","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n/**\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n}\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = \n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n}\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n  \n    return result;\n}\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    // eslint-disable-next-line\n    'https://bq9y0yw6fa.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then ((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n  \n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n}\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    // eslint-disable-next-line\n    const url = 'https://bq9y0yw6fa.execute-api.us-west-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n}\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n        'https://bq9y0yw6fa.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url'\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}","import React, { Component } from 'react';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\n// import { mockData } from './mock-data';\nimport { extractLocations, getEvents } from './api';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    selectedLocation: 'all'\n  }\n\n  updateEvents = (location, eventCount) => {\n    const { selectedLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents = (location === 'all') \n        ? events \n        : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          selectedLocation: location\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents = (selectedLocation === 'all') \n        ? events \n        : events.filter((event) => event.location === selectedLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount\n        });\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events: events.slice(0, this.state.numberOfEvents), locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>weMeet</h1>\n        <p>Choose the city nearest you</p>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} numberOfEvents={this.state.numberOfEvents} />\n        <EventList  events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\natatus.config('2aaff29f97ba463e8079a4646fdc1d2a').install();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}